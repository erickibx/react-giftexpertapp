{"version":3,"sources":["components/AdCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AdCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","img","setTimeout","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAe/C,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAhBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARjB,kBAWdM,GAXc,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCAGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAdAC,qBAAU,WAERxB,EAAQC,GACLwB,MAAK,SAAAC,GACJC,YAAW,WACTJ,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAEV,UAGN,CAACpB,IAEGqB,EDd2BM,CAAa3B,GAAjCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEZ,qBAAKA,UAAU,8CAAf,SAEIH,EAAOJ,KAAI,SAAAgB,GAAG,OACZ,cAAC,EAAD,eAEMA,GADCA,EAAId,aEaRiB,EA5BO,WAAM,MAEU1C,mBAAS,CAAC,UAFpB,mBAEnB2C,EAFmB,KAEP5C,EAFO,KAQ1B,OACE,qCACE,+CACA,cAAC,EAAD,CAAYA,cAAeA,IAC3B,uBAEA,6BAEI4C,EAAWpB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCjBnB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ff6c2f6d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AdCategory = ({ setCategories }) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories(cat => [inputValue, ...cat,]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type='text'\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n  )\n}\n\nAdCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}","\nexport const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=o5moHlgElt4KmIIqM7kmFfO3YBWiOdAB`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map(gif => {\n    return {\n      id: gif.id,\n      title: gif.title,\n      url: gif.images?.downsized_medium.url,\n    }\n  });\n  return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","\n// import React, { useEffect, useState } from 'react'\nimport React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n      {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\n\n      <div className='card-grid animate__animated animate__fadeIn'>\n        {\n          images.map(img =>\n            <GifGridItem\n              key={img.id}\n              {...img}\n            />\n          )\n        }\n      </div>\n    </>\n  )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n  useEffect(() => {\n\n    getGifs(category)\n      .then(img => {\n        setTimeout(() => {\n          setState({\n            data: img,\n            loading: false\n          })\n        }, 3000);\n      })\n\n  }, [category])\n\n  return state; //{data: [],loading: true}\n};","import React, { useState } from 'react';\nimport { AdCategory } from './components/AdCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GiftExpertApp = () => {\n  // const categories = ['Uno', 'Dos', 'Tres'];\n  const [categories, setCategories] = useState(['perro']);\n\n  // const handleAdd = () => {\n  //   setCategories(cat => [...cat, 'Prueba']);\n  // }\n\n  return (\n    <>\n      <h2>GiftExpertApp</h2>\n      <AdCategory setCategories={setCategories} />\n      <hr />\n      {/* <button onClick={handleAdd}>Agregar</button> */}\n      <ol>\n        {\n          categories.map(category =>\n            <GifGrid\n              key={category}\n              category={category}\n            />\n          )\n        }\n      </ol>\n    </>\n  );\n};\n\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}